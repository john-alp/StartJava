package Interfaces;

/**
 * Урок 26 Интерфейсы. 06.12.2019
 *
 * Создать экземпляр интерфейса в Java нельзя.
 *
 * Интерфейс обеспечивает абсолютную абстракцию.
 *
 * Интерфейсы не могут иметь конструкторов, потому что мы не можем создать экземпляр интерфейса. Также интерфейсы не могут
 * иметь методы с реализацией.
 *
 * По умолчанию любой атрибут интерфейса является public, static и final, так что нам не нужно определять модификаторы
 * доступа к атрибутам. Если же вы попробуете это сделать, то компилятор жаловаться не будет.
 *
 * По умолчанию методы интерфейса неявно abstract и public.
 *
 * интерфейс может наследовать несколько интерфейсов.
 *
 * Ключевое слово implements используется классами для реализации интерфейса.
 * Класс, реализующий интерфейс, должен обеспечить реализацию всех его метода, если только это не абстрактный класс.
 *
 * !!!!
 * Здесь у нас классы Animal, Person и Works, интерфейс Info. В Info созданна сигнатура метода showInfo. Классы Animal and Person
 * имплементированы с Info.
 * Поэтому мы уверенны,
 * - что метод showInfo будет во всех классах.
 * - Можно создавать обьекты имлементированных классов с типом данных интерфейса (Info) (важно только то, что они содержат метод showInfo)
 *  например: Info cat = new Animal(1); Но достуен будет только метод из интерфейса Info (showInfo)
 *
 *
 */




 public class Works {
    public static void main(String[] args){
        Info cat = new Animal(1);   // Эти классы реализуют интерфейс Info.. поэтому, возможно так делать.. тип инфо ссылается на обьект класса энимал
        Info man = new Person("Evgeny");
        cat.showInfo();   // доступ только к методам, которые есть в интерфейсе Info
        man.showInfo();
        System.out.printf("--------------------------%s%n","Дичь какая-то");
        outputInfo(cat);
        outputInfo(man);
    }
    public static void outputInfo(Info info){  // вместо String написали название интерфейса Info и
        // ввиде аргумента передаем обьект (Animal-cat и Person-man)
        info.showInfo();
    }
}
/*Animal animal1 = new Animal(1);
        Person person1 = new Person("Evgeny");
        animal1.sleep();
        person1.sayHello();
        System.out.printf("--------------------------%s%n","-");
        animal1.showInfo();
        person1.showInfo();
        */